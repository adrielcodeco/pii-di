{"version":3,"sources":["../src/factory.ts"],"names":[],"mappings":";;AASA;IAME,YAAa,IAAc,EAAE,eAAwB,KAAK;QACxD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAA;IAClC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACzC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,IAAI,EAAE,CAAA;SAC5B;QACD,OAAO,IAAI,CAAC,SAAS,CAAA;IACvB,CAAC;CACF;AAlBD,yCAkBC","file":"factory.js","sourcesContent":["/**\n * Copyright 2018-present, CODECO. All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Class } from './util'\n\nexport default class ServiceInstanceFactory<T> {\n  type: Class<T>\n  lazyInstance: boolean\n\n  _instance?: T\n\n  constructor (type: Class<T>, lazyInstance: boolean = false) {\n    this.type = type\n    this.lazyInstance = lazyInstance\n  }\n\n  newInstance (): T {\n    if (!this.lazyInstance || !this._instance) {\n      const Type = this.type\n      this._instance = new Type()\n    }\n    return this._instance\n  }\n}\n"]}